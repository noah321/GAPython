from numpy import exp, array, random, dot
  
#this is stuf that i need in the part that i wasn't able to get to work
  #from random import randint

traininginput = array([[1,2,3],[1,4,3],[6,3,2],[5,4,7],[2,5,3,],[2,9,3]])
trainingoutput = array([[1,2,3],[1,3,4],[2,3,6],[7,4,5],[2,3,5,],[2,3,9]]).T

random.seed(1)

# i got this from another neural network and don't completely know how it works but i used it to create synapes so if you could 
# explane to me how to make synapes and there wieghts that would be great because i can't find an explanition for this in python on the internet
self.synaptic_weights = 2 * random.random((3, 3)) - 1

#i treid to make a funtion that could generate inputs and output
  #city = [[randint(1,9),randint(1,9)],[randint(1,9),randint(1,9)],[randint(1,9),randint(1,9)]] - generates inputs for a x, y grid
  #dis = [[[],[]],[[],[]],[[],[]]] - creates spaces that i was hoping would fix the main problem i had
  #for p in range(0,2): -  twice for both x and y
  #  for i in range(len(city)): - to go through every city
  #    for o in range(len(city)): - matches up the first city to every other city inclueding itself
  #      disnumber = abs(city[i][p]-city[o][p]) - finds difrence between the x and y of the cities to be used for the Pythagorean theorem 
  #      dis[i][o][p].insert(disnumber) - tries to imput them into dis array but didn't work
  #print(city) - i was looking for the promble in these two lines
  #print(dis)
